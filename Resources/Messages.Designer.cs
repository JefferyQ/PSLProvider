//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.PackageManagement.PackageSourceListProvider.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.PackageManagement.PackageSourceListProvider.Resources.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: &apos;{1}&apos; is used for &apos;{2}&apos; only. &apos;{1}&apos; will be ignored..
        /// </summary>
        internal static string AddOrRemovePath {
            get {
                return ResourceManager.GetString("AddOrRemovePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; is already installed..
        /// </summary>
        internal static string AlreadyInstalled {
            get {
                return ResourceManager.GetString("AlreadyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of bytes read: &apos;{0}&apos;.
        /// </summary>
        internal static string BytesRead {
            get {
                return ResourceManager.GetString("BytesRead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calling Msi provider to install the package &apos;{0}&apos;.
        /// </summary>
        internal static string CallMsiForInstall {
            get {
                return ResourceManager.GetString("CallMsiForInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert type with more than 2 generic arguments.
        /// </summary>
        internal static string CannotConvertGenericTypes {
            get {
                return ResourceManager.GetString("CannotConvertGenericTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert object of type &apos;{0}&apos; to primitive, string or PSObject type..
        /// </summary>
        internal static string CannotConvertObject {
            get {
                return ResourceManager.GetString("CannotConvertObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: PackageManagement manifest file &apos;{1}&apos; does not exist in &apos;{2}&apos;..
        /// </summary>
        internal static string CannotFindManifestFile {
            get {
                return ResourceManager.GetString("CannotFindManifestFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot find packages with a canonicalId = &apos;{1}&apos;. Make sure the package source &apos;{2}&apos; is registered with the provider &apos;{3}&apos;. .
        /// </summary>
        internal static string CannotFindPackage {
            get {
                return ResourceManager.GetString("CannotFindPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot identify the PackageManagement version. Try &apos;Get-Module -Name PackageManagement -ListAvailable&apos; to check if the PackageManagement is available..
        /// </summary>
        internal static string CannotFindPackageManagementVersion {
            get {
                return ResourceManager.GetString("CannotFindPackageManagementVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catalog file not found for &apos;{0}&apos;. Catalog files are required for non local json files and should have the same name and located in the same directory as json file..
        /// </summary>
        internal static string CatalogFileMissing {
            get {
                return ResourceManager.GetString("CatalogFileMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catalog File verification failed for  &apos;{0}&apos;..
        /// </summary>
        internal static string CatalogFileVerificationFailed {
            get {
                return ResourceManager.GetString("CatalogFileVerificationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catalog File &apos;{0}&apos; verification failed with &apos;{1}&apos;..
        /// </summary>
        internal static string CatalogFileVerificationFailedWithError {
            get {
                return ResourceManager.GetString("CatalogFileVerificationFailedWithError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed downloading &apos;{0}&apos;..
        /// </summary>
        internal static string CompletedDownload {
            get {
                return ResourceManager.GetString("CompletedDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed iterating for &apos;{0}&apos;..
        /// </summary>
        internal static string CompletedIterating {
            get {
                return ResourceManager.GetString("CompletedIterating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not get response from query &apos;{0}&apos;..
        /// </summary>
        internal static string CouldNotGetResponseFromQuery {
            get {
                return ResourceManager.GetString("CouldNotGetResponseFromQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create directory &apos;{0}&apos;..
        /// </summary>
        internal static string CreateDirectory {
            get {
                return ResourceManager.GetString("CreateDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a file &apos;{0}&apos;..
        /// </summary>
        internal static string CreateFile {
            get {
                return ResourceManager.GetString("CreateFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calling &apos;{0}&apos;::&apos;{1}&apos;..
        /// </summary>
        internal static string DebugInfoCallMethod {
            get {
                return ResourceManager.GetString("DebugInfoCallMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calling &apos;{0}&apos;::&apos;{1}&apos;, &apos;{2}&apos;..
        /// </summary>
        internal static string DebugInfoCallMethod3 {
            get {
                return ResourceManager.GetString("DebugInfoCallMethod3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returning the call &apos;{0}&apos;::&apos;{1}&apos;..
        /// </summary>
        internal static string DebugInfoReturnCall {
            get {
                return ResourceManager.GetString("DebugInfoReturnCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dependency package &apos;{0}&apos; is already installed..
        /// </summary>
        internal static string DependencyInstalled {
            get {
                return ResourceManager.GetString("DependencyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependency loop detected for package &apos;{0}&apos;..
        /// </summary>
        internal static string DependencyLoopDetected {
            get {
                return ResourceManager.GetString("DependencyLoopDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dependency package &apos;{0}&apos; is not installed..
        /// </summary>
        internal static string DependencyNotInstalled {
            get {
                return ResourceManager.GetString("DependencyNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination specified in the package source is not supported for &apos;{0}&apos; provider. It will be ignored..
        /// </summary>
        internal static string DestinationNotSupported {
            get {
                return ResourceManager.GetString("DestinationNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination is required. Please add &apos;Destination&apos; entry in the package source file..
        /// </summary>
        internal static string DestinationRequired {
            get {
                return ResourceManager.GetString("DestinationRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: Directory &apos;{1}&apos; does not exist..
        /// </summary>
        internal static string DirectoryNotExist {
            get {
                return ResourceManager.GetString("DirectoryNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading ....
        /// </summary>
        internal static string Downloading {
            get {
                return ResourceManager.GetString("Downloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading a package &apos;{0}&apos; ....
        /// </summary>
        internal static string DownloadingPackage {
            get {
                return ResourceManager.GetString("DownloadingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloaded {0:0.00} MB out of {1:0.00} MB..
        /// </summary>
        internal static string DownloadingProgress {
            get {
                return ResourceManager.GetString("DownloadingProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: Downloading package &apos;{1}&apos; failed, please make sure &apos;{1}&apos; is accessable..
        /// </summary>
        internal static string FailedDownloadPackage {
            get {
                return ResourceManager.GetString("FailedDownloadPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: Failed to download a package from &apos;{1}&apos;. Try re-run the cmdlet with -Verbose -Debug to get more information..
        /// </summary>
        internal static string FailedToDownload {
            get {
                return ResourceManager.GetString("FailedToDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: failed to get a package from the given fast reference &apos;{1}..
        /// </summary>
        internal static string FailedToGetPackageObject {
            get {
                return ResourceManager.GetString("FailedToGetPackageObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: Failed to retrive &apos;Path&apos; environment variable..
        /// </summary>
        internal static string FailedToRetrivePathEnvironmentVariable {
            get {
                return ResourceManager.GetString("FailedToRetrivePathEnvironmentVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: Failed to install Package &apos;{1}&apos;..
        /// </summary>
        internal static string FailToInstallPackage {
            get {
                return ResourceManager.GetString("FailToInstallPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A file with this name already exists in target directory.
        /// </summary>
        internal static string FileExists {
            get {
                return ResourceManager.GetString("FileExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; does not exist in &apos;{1}&apos;..
        /// </summary>
        internal static string FileNotFound {
            get {
                return ResourceManager.GetString("FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: found more than one package (&apos;{1}&apos;) with a canonicalId = &apos;{2}&apos;. Please double check if package name, version, and source location are correct..
        /// </summary>
        internal static string FoundMorePackages {
            get {
                return ResourceManager.GetString("FoundMorePackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source &apos;{0}&apos; is one of the registered sources in &apos;{1}&apos; provider..
        /// </summary>
        internal static string FoundRegisteredSource {
            get {
                return ResourceManager.GetString("FoundRegisteredSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found &apos;{0}&apos; registered package source in &apos;{1}&apos; provider..
        /// </summary>
        internal static string FoundTotalRegisteredSource {
            get {
                return ResourceManager.GetString("FoundTotalRegisteredSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash not found for the package &apos;{0}&apos;..
        /// </summary>
        internal static string HashNotFound {
            get {
                return ResourceManager.GetString("HashNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash for package &apos;{0}&apos; does not match hash provided from the server..
        /// </summary>
        internal static string HashNotMatch {
            get {
                return ResourceManager.GetString("HashNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid hash for package &apos;{0}&apos;. Please correct the values in json file or if you determine this file is safe, use -SkipHashValidation switch to skip Hash validation..
        /// </summary>
        internal static string HashNotSpecified {
            get {
                return ResourceManager.GetString("HashNotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash algorithm &apos;{0}&apos; is not supported..
        /// </summary>
        internal static string HashNotSupported {
            get {
                return ResourceManager.GetString("HashNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash validation was successful..
        /// </summary>
        internal static string HashValidationSuccessfull {
            get {
                return ResourceManager.GetString("HashValidationSuccessfull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash verification failed for package &apos;{0}&apos; downloaded from &apos;{1}&apos;. If you determine this file is safe, use -SkipHashValidation switch to skip Hash validation..
        /// </summary>
        internal static string HashVerificationFailed {
            get {
                return ResourceManager.GetString("HashVerificationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provided header value &apos;{0}&apos; was invalid and hence ignored..
        /// </summary>
        internal static string HeaderIgnored {
            get {
                return ResourceManager.GetString("HeaderIgnored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to install the package &apos;{0}&apos; , see error details: &apos;{1}&apos;..
        /// </summary>
        internal static string InstallFailed {
            get {
                return ResourceManager.GetString("InstallFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing ....
        /// </summary>
        internal static string Installing {
            get {
                return ResourceManager.GetString("Installing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing a package from &apos;{0}&apos;.
        /// </summary>
        internal static string InstallingPackage {
            get {
                return ResourceManager.GetString("InstallingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file extension &apos;{0}&apos; is not valid. The required file extension is &apos;.nupkg&apos;..
        /// </summary>
        internal static string InvalidFileExtension {
            get {
                return ResourceManager.GetString("InvalidFileExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash algorithm &apos;{0}&apos; is not supported. We only support sha512, md5 and sha256..
        /// </summary>
        internal static string InvalidHashAlgorithm {
            get {
                return ResourceManager.GetString("InvalidHashAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package &apos;{0}&apos; does not have the .nuspec file..
        /// </summary>
        internal static string InvalidPackage {
            get {
                return ResourceManager.GetString("InvalidPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package List Source &apos;{0}&apos; has incorrect format..
        /// </summary>
        internal static string InvalidPackageListFormat {
            get {
                return ResourceManager.GetString("InvalidPackageListFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Query Url {0} is invalid..
        /// </summary>
        internal static string InvalidQueryUrl {
            get {
                return ResourceManager.GetString("InvalidQueryUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid version string..
        /// </summary>
        internal static string InvalidVersionString {
            get {
                return ResourceManager.GetString("InvalidVersionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loaded a configuration from file &apos;{0}&apos;..
        /// </summary>
        internal static string LoadedConfigurationFile {
            get {
                return ResourceManager.GetString("LoadedConfigurationFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading a configuration from file &apos;{0}&apos;..
        /// </summary>
        internal static string LoadingConfigurationFile {
            get {
                return ResourceManager.GetString("LoadingConfigurationFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider &apos;{0}&apos; is not used to perform this operation because it requires a minimum version of the PackageManagement module to be &apos;{1}&apos;, but the current version of the PackageManagement module is &apos;{2}&apos;..
        /// </summary>
        internal static string MininumVersonCheck {
            get {
                return ResourceManager.GetString("MininumVersonCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration file &apos;{0}&apos; does not have &apos;configuration&apos; element..
        /// </summary>
        internal static string MissingConfigurationElement {
            get {
                return ResourceManager.GetString("MissingConfigurationElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: No package found..
        /// </summary>
        internal static string NoPackageFound {
            get {
                return ResourceManager.GetString("NoPackageFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source &apos;{0}&apos; is not one of the registered sources in &apos;{1}&apos; provider..
        /// </summary>
        internal static string NotFoundRegisteredSource {
            get {
                return ResourceManager.GetString("NotFoundRegisteredSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; packages returned by the provider &apos;{1}&apos; for the &apos;{2}&apos; operation..
        /// </summary>
        internal static string NumberOfPackagesRecevied {
            get {
                return ResourceManager.GetString("NumberOfPackagesRecevied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to overwrite it?.
        /// </summary>
        internal static string OverwriteFile {
            get {
                return ResourceManager.GetString("OverwriteFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; failed to install..
        /// </summary>
        internal static string PackageFailedInstall {
            get {
                return ResourceManager.GetString("PackageFailedInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: The package with Name = &apos;{1}&apos;, Version = &apos;{2}&apos;, Source = &apos;{3}&apos; not found. Run &apos;Get-PackageSource&apos; to see the registered package source file (.json) and make sure the package is defined in the file..
        /// </summary>
        internal static string PackageNotFound {
            get {
                return ResourceManager.GetString("PackageNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find source list file &apos;{0}&apos;..
        /// </summary>
        internal static string PackageSourceListNotFound {
            get {
                return ResourceManager.GetString("PackageSourceListNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PackageSourceList is not trusted.
        /// </summary>
        internal static string PackageSourceListNotTrusted {
            get {
                return ResourceManager.GetString("PackageSourceListNotTrusted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; is registered as a package source location for the provider &apos;{1}&apos;. But it does not exist. Run &apos;Get-PackageSource&apos; to view the registered package sources, &apos;Unregister-PackageSource&apos; to unregister the source if you do not wish to use it or &apos;Set-PackageSource&apos; to fix the source location..
        /// </summary>
        internal static string PackageSourceManifestNotFound {
            get {
                return ResourceManager.GetString("PackageSourceManifestNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; packages recevied in the last request..
        /// </summary>
        internal static string PackagesReceived {
            get {
                return ResourceManager.GetString("PackagesReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A required provider &apos;{0}&apos; does not exist. Try &apos;Find-PackageProvider&apos; and &apos;Install-PackageProvider&apos; to install the particular provider..
        /// </summary>
        internal static string ProviderNotFound {
            get {
                return ResourceManager.GetString("ProviderNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to download package source list from &apos;{0}&apos;?.
        /// </summary>
        internal static string QueryDownloadPackageSourceList {
            get {
                return ResourceManager.GetString("QueryDownloadPackageSourceList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are &apos;{0}&apos; registered sources in &apos;{1}&apos; provider..
        /// </summary>
        internal static string RegisteredSources {
            get {
                return ResourceManager.GetString("RegisteredSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed the package source: &apos;{0}&apos;..
        /// </summary>
        internal static string RemovedPackageSource {
            get {
                return ResourceManager.GetString("RemovedPackageSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request is canceled in &apos;{0}&apos;::&apos;{1}&apos;..
        /// </summary>
        internal static string RequestCanceled {
            get {
                return ResourceManager.GetString("RequestCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; in json file &apos;{1}&apos; is missing following: version, type or source information..
        /// </summary>
        internal static string RequiredFieldNotFound {
            get {
                return ResourceManager.GetString("RequiredFieldNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry downloading &apos;{0}&apos; for &apos;{1}&apos; more times.
        /// </summary>
        internal static string RetryingDownload {
            get {
                return ResourceManager.GetString("RetryingDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running command &apos;{0}&apos;.
        /// </summary>
        internal static string RunningCommand {
            get {
                return ResourceManager.GetString("RunningCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saving a config with a file path &apos;{0}&apos;..
        /// </summary>
        internal static string SavingConfigurationWithFile {
            get {
                return ResourceManager.GetString("SavingConfigurationWithFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Searching repository &apos;{0}&apos; for &apos;{1}&apos;..
        /// </summary>
        internal static string SearchingRepository {
            get {
                return ResourceManager.GetString("SearchingRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting a config object to null..
        /// </summary>
        internal static string SettingConfigurationToNull {
            get {
                return ResourceManager.GetString("SettingConfigurationToNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipping Hash Validation..
        /// </summary>
        internal static string SkipHashValidation {
            get {
                return ResourceManager.GetString("SkipHashValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipping Downloaded Package &apos;{0}&apos;..
        /// </summary>
        internal static string SkippedDownloadedPackage {
            get {
                return ResourceManager.GetString("SkippedDownloadedPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source &apos;{0}&apos; is a directory..
        /// </summary>
        internal static string SourceIsADirectory {
            get {
                return ResourceManager.GetString("SourceIsADirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source &apos;{0}&apos; is a file path..
        /// </summary>
        internal static string SourceIsAFilePath {
            get {
                return ResourceManager.GetString("SourceIsAFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; is downloaded..
        /// </summary>
        internal static string SuccessfullyDownloaded {
            get {
                return ResourceManager.GetString("SuccessfullyDownloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; is installed..
        /// </summary>
        internal static string SuccessfullyInstalled {
            get {
                return ResourceManager.GetString("SuccessfullyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; successfully installed to &apos;{1}&apos;..
        /// </summary>
        internal static string SuccessfullyInstalledToDestination {
            get {
                return ResourceManager.GetString("SuccessfullyInstalledToDestination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source &apos;{0}&apos; is validated..
        /// </summary>
        internal static string SuccessfullyValidated {
            get {
                return ResourceManager.GetString("SuccessfullyValidated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total package yield:&apos;{0}&apos; for the specified package &apos;{1}&apos;..
        /// </summary>
        internal static string TotalPackageYield {
            get {
                return ResourceManager.GetString("TotalPackageYield", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type to compare must be an instance of SemanticVersion..
        /// </summary>
        internal static string TypeMustBeASemanticVersion {
            get {
                return ResourceManager.GetString("TypeMustBeASemanticVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package &apos;{0}&apos; failed to install..
        /// </summary>
        internal static string UnableToInstallPackage {
            get {
                return ResourceManager.GetString("UnableToInstallPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to resolve package dependency -- package &apos;{0}&apos; not found..
        /// </summary>
        internal static string UnableToResolveDependency {
            get {
                return ResourceManager.GetString("UnableToResolveDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;:Unable to resolve package source &apos;{1}&apos;..
        /// </summary>
        internal static string UnableToResolveSource {
            get {
                return ResourceManager.GetString("UnableToResolveSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file extension &apos;{0}&apos;::&apos;{1}&apos; is not valid. The required file extension is &apos;.nuspec&apos; or &apos;.nupkg&apos;..
        /// </summary>
        internal static string UnexpectedFileType {
            get {
                return ResourceManager.GetString("UnexpectedFileType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstalled &apos;{0}&apos; package..
        /// </summary>
        internal static string UninstalledPackage {
            get {
                return ResourceManager.GetString("UninstalledPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall operation failed by running a command &apos;{0}&apos;, see error details: &apos;{1}&apos;..
        /// </summary>
        internal static string UninstallFailed {
            get {
                return ResourceManager.GetString("UninstallFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UnInstalling a package ....
        /// </summary>
        internal static string Uninstalling {
            get {
                return ResourceManager.GetString("Uninstalling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: uninstalling package &apos;{1}&apos;..
        /// </summary>
        internal static string UninstallingPackage {
            get {
                return ResourceManager.GetString("UninstallingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not support uninstalling &apos;{1}&apos; package. Try use -providerName &apos;{2}&apos;..
        /// </summary>
        internal static string UninstallPackageNotSupported {
            get {
                return ResourceManager.GetString("UninstallPackageNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; with Source &apos;{1}&apos; has unknown media type &apos;{2}&apos;..
        /// </summary>
        internal static string UnknownMediaType {
            get {
                return ResourceManager.GetString("UnknownMediaType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown category for &apos;{0}&apos;::&apos;{1}&apos;: &apos;{2}&apos;.
        /// </summary>
        internal static string UnkownCategory {
            get {
                return ResourceManager.GetString("UnkownCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provider &apos;{0}&apos; does not support the Uri format: &apos;{1}&apos;..
        /// </summary>
        internal static string UnsuportedUriFormat {
            get {
                return ResourceManager.GetString("UnsuportedUriFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Unsupported package source &apos;{1}&apos;..
        /// </summary>
        internal static string UnsupportedPackageSource {
            get {
                return ResourceManager.GetString("UnsupportedPackageSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: unable to perform &apos;{1}&apos; operation because &apos;{2}&apos; provider is not supported on your run-time environment. &apos;{2}&apos; provider is supported on PowerShell built on Full CLR only..
        /// </summary>
        internal static string UnsupportedPowerShellEnvironment {
            get {
                return ResourceManager.GetString("UnsupportedPowerShellEnvironment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: provider type &apos;{1}&apos; not supported..
        /// </summary>
        internal static string UnsupportedProviderType {
            get {
                return ResourceManager.GetString("UnsupportedProviderType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uri Scheme &apos;{0}&apos; is not supported. Only &apos;{1}&apos; is supported..
        /// </summary>
        internal static string UriSchemeNotSupported {
            get {
                return ResourceManager.GetString("UriSchemeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the default configuration..
        /// </summary>
        internal static string UseDefaultConfig {
            get {
                return ResourceManager.GetString("UseDefaultConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are installing a package based on -Source location. Because the location from -Source is not saved by &apos;{0}&apos; provider so &apos;{0}&apos; cannot uninstall it via Uninstall-Package later. It is recommended that you should register the source via Register-PackageSource so &apos;{0}&apos; can perform properly across its supported cmdlets..
        /// </summary>
        internal static string UsingSourceLocation {
            get {
                return ResourceManager.GetString("UsingSourceLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is &apos;{1}&apos;..
        /// </summary>
        internal static string VariableCheck {
            get {
                return ResourceManager.GetString("VariableCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter Name &apos;{0}&apos; is required and cannot contain wildcard characters when RequiredVersion, MinimumVersion or MaximumVersion is specified in the same command..
        /// </summary>
        internal static string WildCardCharsAreNotSupported {
            get {
                return ResourceManager.GetString("WildCardCharsAreNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yielding..
        /// </summary>
        internal static string Yielding {
            get {
                return ResourceManager.GetString("Yielding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yielding the package source: &apos;{0}&apos;..
        /// </summary>
        internal static string YieldingPackageSource {
            get {
                return ResourceManager.GetString("YieldingPackageSource", resourceCulture);
            }
        }
    }
}
